## usage
# tail ~/.bashrc
# cat ~/.dotfiles/_bashrc  >> ~/.bashrc
# source ~/.bashrc
# ---------------------


# define color
# ------------------------------------
export COLOR_NC='\e[0m' # No Color
export COLOR_WHITE='\e[1;37m'
export COLOR_BLACK='\e[0;30m'
export COLOR_BLUE='\e[0;34m'
export COLOR_LIGHT_BLUE='\e[1;34m'
export COLOR_GREEN='\e[0;32m'
export COLOR_LIGHT_GREEN='\e[1;32m'
export COLOR_CYAN='\e[0;36m'
export COLOR_LIGHT_CYAN='\e[1;36m'
export COLOR_RED='\e[0;31m'
export COLOR_LIGHT_RED='\e[1;31m'
export COLOR_PURPLE='\e[0;35m'
export COLOR_LIGHT_PURPLE='\e[1;35m'
export COLOR_BROWN='\e[0;33m'
export COLOR_YELLOW='\e[1;33m'
export COLOR_GRAY='\e[0;30m'
export COLOR_LIGHT_GRAY='\e[1;30m'
#
export MANPATH=/opt/local/share/man:/opt/local/man:$MANPATH
export LANG='ja_JP.UTF-8'
export LC_ALL='ja_JP.UTF-8'
export LC_MESSAGES='ja_JP.UTF-8'
export LC_CTYPE=C
export LESSCHARSET=utf-8
export DISPLAY=:0.0
export TERM=xterm-color

# define HISTRY
#---------------------------------------
HISTSIZE=10000
HISTFILESIZE=10000
HISTCONTROL=ignoredups
export HISTSIZE HISTFILESIZE HISTCONTROL
# ヒストリサーチ機能
bind '"\e[A": history-search-backward'
bind '"\C-p": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\C-n": history-search-forward'

# alias
# --------------------------------------
alias ..1='cd ..'
alias ..2='cd ../../'
alias ..3='cd ../../../'
alias ..4='cd ../../../../'
alias ..5='cd ../../../../../'
alias ..6='cd ../../../../../../'
alias ..7='cd ../../../../../../../'
alias ..8='cd ../../../../../../../../'
alias la='ls -aF'
alias ll='ls -alF'
alias cd='cd_proml'
alias findf='find -type f -name'
alias findd='find -type d -name'
alias grep='grep --color=auto --no-messages --binary-files=without-match'

# color
function parse_git_branch {
    type git > /dev/null 2>&1 | grep -i 'not found'
    if [ $? -eq 1 ] ; then
      \git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
    fi
}
function proml {
  pwd_str="$(pwd | sed -e "s|$HOME|~|")"
  prompt_str="[$(whoami)@$(hostname | cut -d'.' -f1):${pwd_str}$(parse_git_branch)]"
  cols=$(expr $(tput cols) - ${#prompt_str})
  margin=$(printf "%${cols}s" "[$(date +'%Y-%m-%d %H:%M:%S')]" | cut -d'[' -f1)
  PS1="[${COLOR_LIGHT_RED}\u${COLOR_NC}${COLOR_LIGHT_GRAY}@\h${COLOR_NC}:${COLOR_LIGHT_CYAN}\w${COLOR_NC}${COLOR_LIGHT_BLUE}$(parse_git_branch)${COLOR_NC}]${margin}${COLOR_LIGHT_GREEN}[$(date +"%Y-%m-%d") \t]${COLOR_NC}\n$ "
}
function cd_proml {
    \cd $1
    proml
}


# unzip
# --------------------------------------
function extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# 大文字小文字を区別しない
#  @ ~/.inputrc:  set completion-ignore-case on
# --------------------------------------
shopt -s nocaseglob

# none-bell
set bell-style none

# git
# --------------------------------------
alias gc='git commit'
alias ga='git add'
alias gll='git pull'
alias glr='git pull --recursive'
alias gsh='git push'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdn='git diff --name-status'
alias gl='git log'
alias gb='git branch'
alias gco='git checkout'
alias gcom='git checkout master'
alias gsh='git show'
alias gs='git status'
alias gm='git mergetool'
alias gri='git rebase -i'
alias gra='git rebase --abort'
alias grc='git rebase --continue'
alias gcp='git cherry-pick'
alias gsb='git show-branch --current'

# django
# --------------------------------------
alias sd='source deactivate'
alias venv='source ./myvenv/bin/activate'
alias rs='python manage.py runserver 0.0.0.0:8000'